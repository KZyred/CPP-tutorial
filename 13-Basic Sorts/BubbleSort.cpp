#include <iostream>


// Tr∆∞·ªùng H·ª£p T·ªët Nh·∫•t v·ªõi C·∫£i Ti·∫øn:
// ƒê·ªÉ c·∫£i thi·ªán ƒë·ªô ph·ª©c t·∫°p th·ªùi gian trong tr∆∞·ªùng h·ª£p t·ªët nh·∫•t, thu·∫≠t to√°n Bubble Sort c√≥ th·ªÉ ƒë∆∞·ª£c t·ªëi ∆∞u h√≥a b·∫±ng c√°ch s·ª≠ d·ª•ng m·ªôt c·ªù (flag). C·∫£i ti·∫øn n√†y ho·∫°t ƒë·ªông nh∆∞ sau:

// 1. Th√™m m·ªôt Bi·∫øn C·ªù:
// Th√™m m·ªôt bi·∫øn boolean g·ªçi l√† swapped ƒë·ªÉ theo d√µi xem c√≥ ph·∫ßn t·ª≠ n√†o b·ªã ho√°n ƒë·ªïi trong v√≤ng l·∫∑p hi·ªán t·∫°i hay kh√¥ng.

// 2. Ki·ªÉm Tra Sau M·ªói V√≤ng L·∫∑p:
// Trong m·ªói v√≤ng l·∫∑p, ki·ªÉm tra n·∫øu kh√¥ng c√≥ ph·∫ßn t·ª≠ n√†o b·ªã ho√°n ƒë·ªïi. N·∫øu kh√¥ng c√≥ ph·∫ßn t·ª≠ n√†o b·ªã ho√°n ƒë·ªïi trong m·ªôt v√≤ng l·∫∑p, c√≥ nghƒ©a l√† d√£y ƒë√£ ƒë∆∞·ª£c s·∫Øp x·∫øp v√† thu·∫≠t to√°n c√≥ th·ªÉ d·ª´ng l·∫°i s·ªõm.

// Gi·∫£i Th√≠ch ƒê·ªô Ph·ª©c T·∫°p Th·ªùi Gian T·ªët Nh·∫•t:
// - Tr∆∞·ªùng h·ª£p t·ªët nh·∫•t: Khi d√£y ƒë√£ ƒë∆∞·ª£c s·∫Øp x·∫øp s·∫µn, bi·∫øn swapped s·∫Ω lu√¥n gi·ªØ gi√° tr·ªã false sau m·ªói v√≤ng l·∫∑p qua to√†n b·ªô d√£y.
// - T·ªëi ∆∞u h√≥a: Trong tr∆∞·ªùng h·ª£p n√†y, thu·∫≠t to√°n ch·ªâ c·∫ßn m·ªôt l·∫ßn l·∫∑p qua d√£y d·ªØ li·ªáu m√† kh√¥ng c·∫ßn th·ª±c hi·ªán b·∫•t k·ª≥ ph√©p ho√°n ƒë·ªïi n√†o. Do ƒë√≥, s·ªë l·∫ßn l·∫∑p qua d√£y ch·ªâ l√† m·ªôt l·∫ßn (n), v√† ƒë·ªô ph·ª©c t·∫°p th·ªùi gian l√† ùëÇ(ùëõ).

using namespace std;
void bubbleSort(int array[], int size)
{
    //   +=====================================================+
    //   |                 WRITE YOUR CODE HERE                |
    //   | Description:                                        |
    //   | - This function sorts an array using the            |
    //   |   Bubble Sort algorithm.                            |
    //   | - It compares adjacent elements and swaps them if   |
    //   |   they're in the wrong order.                       |
    //   |                                                     |
    //   | Return type: void                                   |
    //   |                                                     |
    //   | Tips:                                               |
    //   | - 'temp' is used for swapping elements.             |
    //   | - The outer loop decreases in size each iteration.  |
    //   | - Inner loop iterates up to 'i'.                    |
    //   | - Check output from Test.cpp in "User logs".        |
    //   +=====================================================+
    for (int i = 0; i < size - 1; i++)
    {
        for (int j = 0; j < size - i; j++)
        {
            if (array[j] > array[j + 1])
            {
                int temp = array[j];
                array[j] = array[j + 1];
                array[j + 1] = temp;
            }
        }
    }
}
// c√°ch 2: l·ªùi gi·∫£i g·ªëc
void bubbleSort(int array[], int size)
{
    for (int i = size - 1; i > 0; i--) // gi·∫£m t·ª´ cu·ªëi
    {
        for (int j = 0; j < i; j++) // l·∫∑p qua sub array
        {
            if (array[j] > array[j + 1])
            {
                int temp = array[j];
                array[j] = array[j + 1];
                array[j + 1] = temp;
            }
        }
    }
}
